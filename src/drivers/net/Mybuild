package embox.driver.net

module loopback {
	source "loopback.c"

	depends embox.net.entry_api
	depends embox.net.l2.ethernet
	depends embox.net.dev
}

module tun {
	source "tun.c"

	depends embox.net.entry_api
	depends embox.net.l2.ethernet
	depends embox.net.dev
}

module virtio {
	option number prep_buff_cnt=16 /* the number of prepared buffers for rxing */
	option number log_level = 0
	@IncludeExport(path="drivers/net")
	source "virtio_net.h"
	source "virtio.c"

	depends embox.net.skbuff
	depends embox.net.skbuff_extra
	depends embox.driver.pci
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
	depends embox.driver.virtio
	depends embox.net.core
}

module e1000 {
	@IncludeExport(path="drivers/net")
	source "e1000.h"
	source "e1000.c"

	depends embox.net.skbuff
	depends embox.compat.libc.all
	depends embox.driver.pci
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
}

module rtl8139 {
	@IncludeExport(path="drivers/net")
	source "rtl8139.h"
	source "rtl8139.c"

	depends embox.net.skbuff
	depends embox.compat.libc.all
	depends embox.driver.pci
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
}

module r6040 {
	@IncludeExport(path="drivers/net")
	source "r6040.h"
	source "r6040.c"

	depends embox.compat.libc.all
	depends embox.kernel.timer.sleep_api
	depends embox.kernel.irq
}

module xemaclite {
	source "xilinx_emaclite.c"

	option number xemaclite_base
	option number irq_num

	depends embox.compat.libc.all
	depends embox.net.skbuff
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
}


module greth {
	source "greth.c"

	option number greth_base=0x80000900
	option number irq_num=1

	depends embox.net.skbuff
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
	depends embox.net.core
	depends embox.net.util.show_packet
	depends embox.compat.posix.util.sleep
}

module usermode {
	source "usermode.c"
	depends embox.net.skbuff
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
}

abstract module lan9118 {}

/* Version of LAN9118 driver with usual interrupt controller */
module lan9118_non_gpio_irq extends lan9118 {
	option number log_level=3 /* info */

	source "lan9118.c"
	
	option number irq_type = 1 /* Interrupt controller ("usual" interrupt) */
	option number memory_region_size = 0x1000000 /* 16 Mb */
	option number base_address = 0x4E000000
	option number irq_nr = 47

	depends embox.net.skbuff
	depends embox.compat.libc.all
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
}

/* Version of LAN9118 driver with GPIO irq */
module lan9118_gpio_irq extends lan9118 {
	option number log_level=3 /* info */

	source "lan9118.c"

	option number irq_type = 0 /* GPIO irq */
	option number irq_pin=16
	option number port=6
	option number memory_region_size = 0x1000000 /* 16 Mb */

	depends embox.driver.gpmc.gpmc_api
	depends embox.driver.gpio.api

	depends embox.net.skbuff
	depends embox.compat.libc.all
	depends embox.net.l2.ethernet
	depends embox.kernel.irq
	depends embox.net.dev
	depends embox.net.entry_api
}

module usbnet {
	source "usbnet.c"

	depends embox.driver.usb.class.cdc
	depends embox.net.skbuff
	depends embox.net.l2.ethernet
	depends embox.net.dev
	depends embox.net.entry_api
	depends embox.net.core
}

@BuildDepends(third_party.bsp.st_f4.core)
module stm32f4_eth {
	source "stm32f4_eth.c"

	depends embox.net.skbuff
	depends embox.net.l2.ethernet
	depends embox.kernel.irq_api
	depends embox.net.dev
	depends embox.net.core
	depends embox.net.entry_api
}
